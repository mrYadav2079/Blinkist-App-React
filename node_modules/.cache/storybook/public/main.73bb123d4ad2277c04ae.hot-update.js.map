{"version":3,"file":"main.73bb123d4ad2277c04ae.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AADA;AAAA;AAIA;AACA;AADA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AARA;AAaA;AAAA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAoBA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAJA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAJA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAuCA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAaA;AAlBA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAaA;AAlBA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA9DA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA4FA;;AA5HA;AA6BA;;;AA7BA","sources":["webpack://my-blinlist/./src/components/organisms/Tabs/index.tsx"],"sourcesContent":["import { makeStyles, styled, ThemeProvider } from \"@mui/styles\";\nimport { BookInfo, Card } from \"../Card\";\nimport theme from \"../../themes/theme\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Tab } from \"@mui/material\";\n\n\nlet MainContainer = styled(\"div\")({\n  width: 912,\n});\n\nlet TabsContainer = styled(\"div\")({\n  width: \"100%\",\n});\n\nlet CardStyling = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  gap: \"25px 30px\",\n  width: 922,\n  position: \"relative\",\n});\n\nlet useStyles = makeStyles({\n  containerStyling: {\n    borderBottom: \"2px solid #F1F6F4\",\n  },\n  tabStyling: {\n    width: 304,\n    alignSelf: \"flex-start\",\n  },\n  selectedTab: {\n    color: \"#22C870 !important\",\n  },\n});\n\nexport const Tabs = () => {\n  let [value, setValue] = useState(\"1\");\n\n  let handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    console.log(event)\n    setValue(newValue);\n  };\n\n  const [books, setBooks] = useState<BookInfo[]>([\n    {\n      id: 0,\n      title: \"\",\n      author: \"\",\n      timeToRead: \"\",\n      numberOfReads: \"\",\n      image: \"\",\n      status: {\n        isFinished: false,\n        isFeatured: false,\n        isTrending: false,\n        justAdded: false,\n      },\n    },\n  ]);\n\n  \n\n  \n\n  let styles = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <MainContainer>\n        <TabsContainer>\n          <TabContext value={value}>\n            <Container className={styles.containerStyling}>\n              <TabList\n                onChange={handleChange}\n                textColor=\"primary\"\n                indicatorColor=\"primary\"\n                TabIndicatorProps={{\n                  style: {\n                    backgroundColor: \"#2CE080\",\n                  },\n                }}\n              >\n                <Tab\n                  classes={{ selected: styles.selectedTab }}\n                  label=\"Currently Reading\"\n                  value=\"1\"\n                  sx={{\n                    width: 304,\n                    alignItems: \"flex-start\",\n                    textTransform: \"none\",\n                    position: \"relative\",\n                    marginLeft: -2,\n                    fontSize: 18,\n                  }}\n                />\n                <Tab\n                  classes={{ selected: styles.selectedTab }}\n                  label=\"Finished\"\n                  value=\"2\"\n                  sx={{\n                    width: 304,\n                    alignItems: \"flex-start\",\n                    textTransform: \"none\",\n                    position: \"relative\",\n                    marginLeft: -2,\n                    fontSize: 18,\n                  }}\n                />\n              </TabList>\n            </Container>\n            <TabPanel value=\"1\">\n              <CardStyling>\n                {books\n                  .filter((item) => !item.status.isFinished)\n                  .map((card, index) => {\n                    return (\n                      <Card\n                        id={card.id}\n                        key={index}\n                        image={card.image}\n                        title={card.title}\n                        author={card.author}\n                        timeToRead={card.timeToRead}\n                        numberOfReads={card.numberOfReads}\n                        isFinished={!card.status.isFinished}\n                        value={card.id}\n                        onClick={incrementCount}\n                      />\n                    );\n                  })}\n              </CardStyling>\n            </TabPanel>\n            <TabPanel value=\"2\">\n              <CardStyling>\n                {books\n                  .filter((item) => item.status.isFinished)\n                  .map((book, index) => {\n                    return (\n                      <Card\n                        id={book.id}\n                        key={index}\n                        title={book.title}\n                        author={book.author}\n                        timeToRead={book.timeToRead}\n                        numberOfReads={book.numberOfReads}\n                        readAgain={book.status.isFinished}\n                        image={book.image}\n                        value={book.id}\n                        onClick={incrementCount}\n                      />\n                    );\n                  })}\n              </CardStyling>\n            </TabPanel>\n          </TabContext>\n        </TabsContainer>\n      </MainContainer>\n    </ThemeProvider>\n  );\n};"],"names":[],"sourceRoot":""}