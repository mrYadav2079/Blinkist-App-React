{"version":3,"file":"main.6cd43e6174b2077f7ed2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AAFA;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AACA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAHA;AADA;;AAQA;AAAA;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAaA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAFA;AAsBA;;AAxDA;AAKA;;;AALA;AAyDA","sources":["webpack://my-blinlist/./src/components/organisms/BookCategories/index.stories.tsx","webpack://my-blinlist/./src/components/organisms/BookCategories/index.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentStory } from \\\"@storybook/react\\\";\\nimport Library from \\\"../../../data/Library\\\";\\nimport Categories from \\\".\\\";\\nimport {MemoryRouter} from 'react-router-dom'\\n\\nexport default {\\n    title: \\\"Organisms/Categories\\\",\\n    component: Categories\\n}\\n\\nconst Template: ComponentStory<typeof Categories> = args => <MemoryRouter><Categories  {...args} /></MemoryRouter>\\n\\n\\nexport const Featured = Template.bind({})\\nFeatured.args = {\\n    data: Library,\\n    status: \\\"featured\\\"\\n}\\n\\nexport const JustAdded = Template.bind({})\\nJustAdded.args = {\\n    data: Library,\\n    status: \\\"justAdded\\\"\\n}\\n\\nexport const Trending = Template.bind({})\\nTrending.args = {\\n    data: Library,\\n    status: \\\"trending\\\"\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Featured\":{\"startLoc\":{\"col\":52,\"line\":11},\"endLoc\":{\"col\":114,\"line\":11},\"startBody\":{\"col\":52,\"line\":11},\"endBody\":{\"col\":114,\"line\":11}},\"JustAdded\":{\"startLoc\":{\"col\":52,\"line\":11},\"endLoc\":{\"col\":114,\"line\":11},\"startBody\":{\"col\":52,\"line\":11},\"endBody\":{\"col\":114,\"line\":11}},\"Trending\":{\"startLoc\":{\"col\":52,\"line\":11},\"endLoc\":{\"col\":114,\"line\":11},\"startBody\":{\"col\":52,\"line\":11},\"endBody\":{\"col\":114,\"line\":11}}};\n    \nimport { ComponentStory } from \"@storybook/react\";\nimport Library from \"../../../data/Library\";\nimport Categories from \".\";\nimport {MemoryRouter} from 'react-router-dom'\n\nexport default {\n    title: \"Organisms/Categories\",\n    component: Categories\n}\n\nconst Template: ComponentStory<typeof Categories> = args => <MemoryRouter><Categories  {...args} /></MemoryRouter>\n\n\nexport const Featured = Template.bind({});\nFeatured.args = {\n    data: Library,\n    status: \"featured\"\n}\n\nexport const JustAdded = Template.bind({});\nJustAdded.args = {\n    data: Library,\n    status: \"justAdded\"\n}\n\nexport const Trending = Template.bind({});Trending.args = {\n    data: Library,\n    status: \"trending\"\n}\n\n\nFeatured.parameters = { storySource: { source: \"args => <MemoryRouter><Categories  {...args} /></MemoryRouter>\" }, ...Featured.parameters };\nJustAdded.parameters = { storySource: { source: \"args => <MemoryRouter><Categories  {...args} /></MemoryRouter>\" }, ...JustAdded.parameters };\nTrending.parameters = { storySource: { source: \"args => <MemoryRouter><Categories  {...args} /></MemoryRouter>\" }, ...Trending.parameters };","import { Typography } from \"@mui/material\";\nimport { makeStyles, styled } from \"@mui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { Card } from \"../Card\";\n\ninterface BookDisplayProps {\n  id: number;\n  title: string;\n  author: string;\n  timeToRead: string;\n  numberOfReads: string;\n  image: string;\n  status: {\n    isTrending: boolean;\n    isFinished: boolean;\n    isFeatured: boolean;\n    justAdded: boolean;\n  };\n}\n\ninterface CardProps {\n  data: Array<BookDisplayProps>;\n  status?: string;\n}\n\nlet MainContainer = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  gap: \"25px 30px\",\n  width: 1200\n});\n\nlet useStyles = makeStyles({\n    title: {\n        fontSize: \"24px !important\",\n        fontWeight: \"700 !important\",\n        color: '#03314B'\n    }\n})\n\nconst Categories = (props: CardProps) => {\n  let {data, status} = props\n  const [showData, setShowData] = useState(data);\n  const [title, setTitle] = useState(\"\")\n\n  let styles = useStyles()\n\n  let filterBooks = (statusOfBlink: string) => {\n    if (statusOfBlink === \"featured\") {\n      setShowData(showData.filter((item) => item.status.isFeatured));\n      setTitle(\"Featured\")\n\n    } else if(statusOfBlink === \"trending\") {\n        setShowData(showData.filter((item) => item.status.isTrending))\n        setTitle(\"Trending\")\n    }\n\n    else if(statusOfBlink === \"justAdded\") {\n      setShowData(showData.filter((item) => item.status.justAdded));\n      setTitle(\"Just Added\")\n    }\n  };\n\n  useEffect(() => {\n    if (status === \"trending\") {\n      filterBooks(\"trending\");\n    } else if (status === \"featured\") {\n      filterBooks(\"featured\");\n    } else {\n      filterBooks(\"justAdded\");\n    }\n  }, [status]);\n\n  return (\n    <>\n      <Typography variant=\"h3\" className={styles.title}>{title}</Typography>\n      <MainContainer>\n        {showData.map((book, key) => {\n          return (\n            <Card\n              id={book.id}\n              key={key}\n              title={book.title}\n              author={book.author}\n              timeToRead={book.timeToRead}\n              numberOfReads={book.numberOfReads}\n              image={book.image}\n              isFinished={book.status.isFinished}\n              addToLibrary={true}\n              value={book.id}\n            />\n          );\n        })}\n      </MainContainer>\n    </>\n  );\n};\nexport default Categories;"],"names":[],"sourceRoot":""}