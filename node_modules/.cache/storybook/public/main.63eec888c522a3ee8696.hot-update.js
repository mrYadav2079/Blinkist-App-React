globalThis["webpackHotUpdatemy_blinlist"]("main",{

/***/ "./src/components/molecules/FooterNav/index.stories.tsx":
/*!**************************************************************!*\
  !*** ./src/components/molecules/FooterNav/index.stories.tsx ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FooterNavComponent": () => (/* binding */ FooterNavComponent),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ "./src/components/molecules/FooterNav/index.tsx");
/* harmony import */ var _data_FooterNavData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../data/FooterNavData */ "./src/data/FooterNavData.tsx");
/* harmony import */ var _data_FooterNavData__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_data_FooterNavData__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/home/vishaly/Blinkist/my-blinlist/src/components/molecules/FooterNav/index.stories.tsx";

/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { Story } from \"@storybook/react\";\nimport { FooterNav, FooterNavProps } from \".\";\nimport {FooterNavData as data} from '../../../data/FooterNavData'\n\nexport default {\n    title: 'Molecules/Footer Nav',\n    component: FooterNav\n}\n\nlet Template: Story<FooterNavProps> = args => <FooterNav {...args} />\n\nexport const FooterNavComponent = Template.bind({})\nFooterNavComponent.args = {\n    title: data.Editorial.title,\n    data: data.Editorial.data\n}"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "FooterNavComponent": {
    "startLoc": {
      "col": 38,
      "line": 10
    },
    "endLoc": {
      "col": 69,
      "line": 10
    },
    "startBody": {
      "col": 38,
      "line": 10
    },
    "endBody": {
      "col": 69,
      "line": 10
    }
  }
};



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Molecules/Footer Nav',
  component: ___WEBPACK_IMPORTED_MODULE_0__.FooterNav
});

let Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(___WEBPACK_IMPORTED_MODULE_0__.FooterNav, { ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 18,
  columnNumber: 47
}, undefined);

_c = Template;
const FooterNavComponent = Template.bind({});
FooterNavComponent.args = {
  title: _data_FooterNavData__WEBPACK_IMPORTED_MODULE_1__.FooterNavData.Editorial.title,
  data: _data_FooterNavData__WEBPACK_IMPORTED_MODULE_1__.FooterNavData.Editorial.data
};
FooterNavComponent.parameters = {
  storySource: {
    source: "args => <FooterNav {...args} />"
  },
  ...FooterNavComponent.parameters
};

var _c;

__webpack_require__.$Refresh$.register(_c, "Template");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/data/FooterNavData.tsx":
/*!************************************!*\
  !*** ./src/data/FooterNavData.tsx ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");



const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.63eec888c522a3ee8696.hot-update.js.map