{"version":3,"file":"main.a352bbd6176f99d13d6d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AACA;AACA;AACA;AAHA;AAAA;AAOA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAzBA;AAoEA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAkBA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoDA;;AAxFA;AAEA;;;AAFA","sources":["webpack://my-blinlist/./src/components/organisms/Card/index.tsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\nimport { styled, makeStyles } from \"@mui/styles\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"../../themes/theme\";\nimport { useEffect, useState } from \"react\";\nimport { IconAndText } from \"../../molecules/IconAndText\";\nimport { ReactComponent as User } from \"../../../images/user.svg\";\nimport { ReactComponent as Time } from \"../../../images/time.svg\";\nimport { ReactComponent as Add } from \"../../../images/add.svg\";\nimport {ButtonComponent} from \"../../atoms/Button\"\n\n\n\n\nlet MainContainer = styled(\"div\")({\n  width: 284,\n  height: 485,\n  borderRadius: 8,\n  border: \"1px solid #E1ECFC\",\n});\n\nlet ImageContainer = styled(\"div\")({\n  width: 284,\n  height: 292,\n});\n\nlet InfoContainer = styled(\"div\")({\n  position: \"relative\",\n  top: 23,\n  left: 16,\n  width: 224,\n  height: 95,\n});\n\nlet OtherDetails = styled(\"div\") ({\n  display: 'flex',\n  flexDirection: 'row',\n  position: 'relative',\n  top: 17,\n  left: -10\n})\n\nlet TimeToReadDiv = styled(\"div\") ({\n  left: 17.67,\n  fontSize: 14,\n  position: 'relative'\n})\n\nlet NumberOfReads = styled(\"div\") ({\n  position: 'relative',\n  left: 30.33,\n  fontSize: 14,\n  \n})\n\nlet ButtonDiv = styled(\"div\") ({\n  position: 'relative',\n  top: 10\n})\n\nlet useStyles = makeStyles({\n  author: {\n    position: \"relative\",\n    top: 16,\n    color: \"#6D787E\",\n    fontSize: 16,\n    fontWeight: 500,\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: '18px !important',\n    color: \"#03314B\",\n  },\n  image: {\n    width: 16.67,\n    height: 16.67,\n  },\n  finished: {\n    color: '#0365F2 !important',\n    position: 'relative',\n    left: 111,\n    top: 30,\n    fontWeight: 500,\n    fontSize: 16\n  },\n  button: {\n    width: '100%',\n    height: 52,\n    color: '#0365F2 !important',\n    \"&:hover\": {\n      color: 'white !important',\n      backgroundColor: '#0365F2 !important',\n      fill: 'white'\n    }\n  }\n});\n\nexport interface CardProps {\n  title?: string;\n  image?: string;\n  author?: string;\n  isFinished?: boolean;\n  addToLibrary?: boolean;\n  currentlyReading?: boolean;\n  readAgain?: boolean;\n  id?: number;\n  timeToRead?: string;\n  numberOfReads?: string;\n  value: number;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport type BookInfo = {\n  id: number,\n  title: string,\n  author: string,\n  image: string,\n  timeToRead: string,\n  numberOfReads: string,\n  status: {\n    isFinished: boolean,\n    isTrending: boolean,\n    justAdded: boolean,\n    isFeatured: boolean\n  }\n}\n\nexport const Card = (props: CardProps) => {\n  let {value, onClick, image, title, author, timeToRead, numberOfReads, readAgain, addToLibrary, isFinished } = props\n  let styles = useStyles();\n\n  let [iconStyle, setIconStyle] = useState({})\n\n  let handleMouseEnterEvent = () => {\n    setIconStyle({\n      fill: 'white',\n      stroke: 'white'\n    })\n  }\n\n  let handleMouseLeaveEvent = () => {\n    setIconStyle({})\n  }\n\n  const [bookInfo, setBookInfo] = useState<BookInfo>({\n    id: 1,\n    title: \"\",\n    author: \"\",\n    image: \"\",\n    timeToRead: \"\",\n    numberOfReads: \"\",\n    status: {\n      isFinished: false,\n      isTrending: false,\n      justAdded: false,\n      isFeatured: false\n    }\n  });\n\n  \n  \n\n  return (\n    <ThemeProvider theme={theme}>\n      <MainContainer onClick={onClick}>\n        <ImageContainer>\n          <img src={image} alt\n          />\n        </ImageContainer>\n        <InfoContainer>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{ color: \"#03314B\" }}\n            className={styles.title}\n            \n          >\n            {title}\n          </Typography>\n          <Typography variant=\"body1\" className={styles.author}>\n            {author}\n          </Typography>\n        </InfoContainer>\n        <OtherDetails>\n          <TimeToReadDiv>\n          {!timeToRead ? null : (\n              <IconAndText iconSource={<Time />} title={timeToRead} variant=\"caption\" />\n            )}\n          </TimeToReadDiv>\n          <NumberOfReads>\n          {!numberOfReads ? null : (\n              <IconAndText iconSource={<User />} title={numberOfReads} variant=\"caption\" />\n            )}\n          </NumberOfReads>\n        </OtherDetails>\n\n        {isFinished ? (\n            <Typography variant=\"body1\" className={styles.finished} >\n              Finished\n            </Typography>\n          ) : null}\n\n          {readAgain ? (\n            <Typography variant=\"body1\" className={styles.finished} >\n              Read Again\n            </Typography>\n          ) : null}\n\n        {addToLibrary ? (\n          <ButtonDiv>\n            <ButtonComponent startIcon={<Add style={iconStyle} />} className={styles.button} onMouseEnter={handleMouseEnterEvent} onMouseLeave={handleMouseLeaveEvent}>Add To Library</ButtonComponent>\n          </ButtonDiv>\n        ) : null}\n      </MainContainer>\n    </ThemeProvider>\n  );\n};"],"names":[],"sourceRoot":""}