{"ast":null,"code":"var _jsxFileName = \"/home/vishaly/Blinkist/my-blinlist/src/components/molecules/Dropdown/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Typography } from \"@mui/material\";\nimport DropDownArrow from \"../../../images/dropdownarrow.svg\";\nimport Account from \"../../../images/account.svg\";\nimport { Icons } from \"../../atoms/Icon\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex',\n    flexDirection: 'row',\n    gap: '1px 1px'\n  },\n  typography: {\n    alignSelf: \"center\",\n    fontFamily: \"Cera Pro\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    color: \"#03314B\"\n  },\n  dropdownarrow: {\n    width: 10.61,\n    height: 6.48,\n    alignSelf: 'center',\n    marginLeft: 6.7\n  }\n});\nexport const Dropdown = props => {\n  _s();\n\n  let styles = useStyles();\n  let {\n    title,\n    style,\n    className,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: `${styles.main} ${className}`,\n      children: [title === 'Account' ? /*#__PURE__*/_jsxDEV(Icons, {\n        source: Account,\n        style: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        className: styles.typography,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Icons, {\n        onClick: onClick,\n        style: style,\n        className: styles.dropdownarrow,\n        \"data-test-id\": \"exploretest\",\n        source: DropDownArrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dropdown, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["Box","Typography","DropDownArrow","Account","Icons","makeStyles","useStyles","main","display","flexDirection","gap","typography","alignSelf","fontFamily","fontWeight","fontSize","lineHeight","color","dropdownarrow","width","height","marginLeft","Dropdown","props","styles","title","style","className","onClick"],"sources":["/home/vishaly/Blinkist/my-blinlist/src/components/molecules/Dropdown/index.tsx"],"sourcesContent":["import { Box, Typography } from \"@mui/material\";\nimport DropDownArrow from \"../../../images/dropdownarrow.svg\";\nimport Account from \"../../../images/account.svg\";\nimport { Icons } from \"../../atoms/Icon\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles({\n  main: {\n    display: 'flex', \n    flexDirection: 'row', \n    gap: '1px 1px'\n  },\n  typography: {\n    alignSelf: \"center\",\n    fontFamily: \"Cera Pro\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"20px\",\n    color: \"#03314B\",\n  },\n  dropdownarrow: {\n    width: 10.61,\n    height: 6.48,\n    alignSelf: 'center',\n    marginLeft: 6.7\n  }\n})\n\nexport interface DropdownProps {\n    title?: string,\n    style?: React.CSSProperties;\n    className?: string;\n    onClick?: () => void;\n}\n\nexport const Dropdown = (props: DropdownProps) => {\n  let styles = useStyles()\n  let {title, style, className, onClick} = props\n  return (\n    <>\n      <Box className={`${styles.main} ${className}`}>\n        {title === 'Account' ? (\n          <Icons source={Account} style={style} />\n        ) : (\n            <Typography variant='body1' className={styles.typography}>\n                {title}\n            </Typography>\n        )}\n\n        <Icons onClick={onClick} style={style} className={styles.dropdownarrow} data-test-id=\"exploretest\" source={DropDownArrow} />\n      </Box>\n    </>\n  );\n};"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,eAAhC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;EAC3BE,IAAI,EAAE;IACJC,OAAO,EAAE,MADL;IAEJC,aAAa,EAAE,KAFX;IAGJC,GAAG,EAAE;EAHD,CADqB;EAM3BC,UAAU,EAAE;IACVC,SAAS,EAAE,QADD;IAEVC,UAAU,EAAE,UAFF;IAGVC,UAAU,EAAE,KAHF;IAIVC,QAAQ,EAAE,MAJA;IAKVC,UAAU,EAAE,MALF;IAMVC,KAAK,EAAE;EANG,CANe;EAc3BC,aAAa,EAAE;IACbC,KAAK,EAAE,KADM;IAEbC,MAAM,EAAE,IAFK;IAGbR,SAAS,EAAE,QAHE;IAIbS,UAAU,EAAE;EAJC;AAdY,CAAD,CAA5B;AA6BA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAA0B;EAAA;;EAChD,IAAIC,MAAM,GAAGlB,SAAS,EAAtB;EACA,IAAI;IAACmB,KAAD;IAAQC,KAAR;IAAeC,SAAf;IAA0BC;EAA1B,IAAqCL,KAAzC;EACA,oBACE;IAAA,uBACE,QAAC,GAAD;MAAK,SAAS,EAAG,GAAEC,MAAM,CAACjB,IAAK,IAAGoB,SAAU,EAA5C;MAAA,WACGF,KAAK,KAAK,SAAV,gBACC,QAAC,KAAD;QAAO,MAAM,EAAEtB,OAAf;QAAwB,KAAK,EAAEuB;MAA/B;QAAA;QAAA;QAAA;MAAA,QADD,gBAGG,QAAC,UAAD;QAAY,OAAO,EAAC,OAApB;QAA4B,SAAS,EAAEF,MAAM,CAACb,UAA9C;QAAA,UACKc;MADL;QAAA;QAAA;QAAA;MAAA,QAJN,eASE,QAAC,KAAD;QAAO,OAAO,EAAEG,OAAhB;QAAyB,KAAK,EAAEF,KAAhC;QAAuC,SAAS,EAAEF,MAAM,CAACN,aAAzD;QAAwE,gBAAa,aAArF;QAAmG,MAAM,EAAEhB;MAA3G;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAeD,CAlBM;;GAAMoB,Q;UACEhB,S;;;KADFgB,Q"},"metadata":{},"sourceType":"module"}